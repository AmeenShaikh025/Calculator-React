{"version":3,"sources":["components/Keycomponent.js","components/Actioncomponent.js","components/EqualComponent.js","components/Clearcomponent.js","reducers/operationReducer.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["Keycomponent","props","onClick","addKey","children","Actioncomponent","className","operand","EqualComponent","resultKey","Clearcomponent","clearResult","keyAdd","data","type","payload","keyAction","clearKey","initialState","exp","App","this","store","Component","connect","operation","dispatch","bindActionCreators","Boolean","window","location","hostname","match","combineReducers","state","action","evaluate","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.030baa4c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Keycomponent(props) {\n  return (\n    <div onClick={() => props.addKey(props.children)}>{props.children}</div>\n  );\n}\n\nexport default Keycomponent;\n","import React from \"react\";\n\nfunction Actioncomponent(props) {\n  return (\n    <div className={props.operand} onClick={() => props.addKey(props.children)}>\n      {props.children}\n    </div>\n  );\n}\nexport default Actioncomponent;\n","import React from \"react\";\n\nexport default function EqualComponent(props) {\n  return (\n    <div className={props.operand} onClick={props.resultKey}>\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Clearcomponent(props) {\n  return (\n    <div className={props.operand} onClick={props.clearResult}>\n      {props.children}\n    </div>\n  );\n}\n","import { evaluate } from \"mathjs\";\n//Actions\n\nexport const KEYADD = \"KEYADD\";\nexport const KEYACTION = \"KEYACTION\";\nexport const KEYCLEAR = \"KEYCLEAR\";\n\n//action creator\n\nexport const keyAdd = data => {\n  return {\n    type: KEYADD,\n    payload: data\n  };\n};\n\nexport const keyAction = () => {\n  return {\n    type: KEYACTION\n  };\n};\n\nexport const clearKey = () => {\n  return {\n    type: KEYCLEAR\n  };\n};\n\nconst initialState = {\n  exp: \"\"\n};\n\nexport default function operationReducer(state = initialState, action) {\n  switch (action.type) {\n    case KEYADD:\n      return {\n        exp: state.exp + action.payload\n      };\n    case KEYACTION:\n      //console.log(state.exp);\n      if (state.exp) {\n        return {\n          exp: evaluate(state.exp)\n        };\n      } else {\n        return state;\n      }\n\n    case KEYCLEAR:\n      return {\n        exp: \"\"\n      };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport Keycomponent from \"./components/Keycomponent\";\nimport Actioncomponent from \"./components/Actioncomponent\";\nimport EqualComponent from \"./components/EqualComponent\";\nimport Clearcomponent from \"./components/Clearcomponent\";\n\nimport { keyAdd, keyAction, clearKey } from \"./reducers/operationReducer\";\n\nclass App extends Component {\n  //console.log(props.store);\n  addKey = data => {\n    //console.log(data);\n    this.props.keyAdd(data);\n  };\n  resultKey = () => {\n    this.props.keyAction();\n  };\n  clearResult = () => {\n    this.props.clearKey();\n  };\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log(nextProps.store);\n  //   if (!nextProps.store) {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"output\">{this.props.store}</div>\n        </div>\n        <div className=\"row\">\n          <Keycomponent addKey={this.addKey}>7</Keycomponent>\n          <Keycomponent addKey={this.addKey}>8</Keycomponent>\n          <Keycomponent addKey={this.addKey}>9</Keycomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            /\n          </Actioncomponent>\n        </div>\n        <div className=\"row\">\n          <Keycomponent addKey={this.addKey}>4</Keycomponent>\n          <Keycomponent addKey={this.addKey}>5</Keycomponent>\n          <Keycomponent addKey={this.addKey}>6</Keycomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            *\n          </Actioncomponent>\n        </div>\n        <div className=\"row\">\n          <Keycomponent addKey={this.addKey}>1</Keycomponent>\n          <Keycomponent addKey={this.addKey}>2</Keycomponent>\n          <Keycomponent addKey={this.addKey}>3</Keycomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            -\n          </Actioncomponent>\n        </div>\n        <div className=\"row\">\n          <Keycomponent addKey={this.addKey}>0</Keycomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            .\n          </Actioncomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            %\n          </Actioncomponent>\n          <Actioncomponent operand=\"operand\" addKey={this.addKey}>\n            +\n          </Actioncomponent>\n        </div>\n        <div className=\"row\">\n          <Clearcomponent operand=\"operand\" clearResult={this.clearResult}>\n            C\n          </Clearcomponent>\n          <EqualComponent operand=\"operand\" resultKey={this.resultKey}>\n            =\n          </EqualComponent>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    store: store.operation.exp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      keyAdd,\n      keyAction,\n      clearKey\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport operation from \"./operationReducer\";\n\nexport default combineReducers({\n  operation: operation\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducer from \"./reducers/\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}